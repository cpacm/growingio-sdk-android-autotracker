apply plugin: 'com.android.application'
apply plugin: 'jacoco'

def withAutotrack = true

if (withAutotrack) {
    apply plugin: 'com.growingio.android.autotracker'
}

buildscript {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven {url "https://s01.oss.sonatype.org/content/repositories/snapshots/"}
    }
    dependencies {
        classpath "com.growingio.android:autotracker-gradle-plugin:${releaseConfiguration.releaseVersion}"
    }
}

android {
    compileSdkVersion buildConfiguration.compileVersion
    defaultConfig {
        applicationId "com.gio.test.three"
        minSdkVersion buildConfiguration.minSdkVersion
        targetSdkVersion buildConfiguration.targetSdkVersion

        buildConfigField "boolean", "withAutotrack", "$withAutotrack"

        testInstrumentationRunner "com.growingio.autotest.TrackAndroidJUnitRunner"

        testInstrumentationRunnerArguments listener: "com.growingio.autotest.TrackTestRunListener"

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
        multiDexEnabled true
    }

    repositories {
        flatDir {
            dirs '../../thirdLibs'
        }
    }

    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
            multiDexKeepFile file('multidex-config.txt')
        }
        release {
            multiDexKeepFile file('multidex-config.txt')
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

growingAutotracker {
    development true
    logEnabled true
//    excludePackages "com.gio.test.three.autotrack.fragments", "com.example"
}
def rootDir = project.rootProject.rootDir

def coverageSourceDirs = [
        "$rootDir/gio-sdk/tracker/src/main/java",
        "$rootDir/gio-sdk/tracker-cdp/src/main/java",
        "$rootDir/gio-sdk/autotracker/src/main/java",
        "$rootDir/gio-sdk/autotracker-cdp/src/main/java",
        "$rootDir/growingio-annotation/compiler/src/main/java",
        "$rootDir/growingio-annotation/src/main/java",
        "$rootDir/growingio-tracker-core/src/main/java",
        "$rootDir/growingio-autotracker-core/src/main/java",
        "$rootDir/growingio-autotracker-gradle-plugin/src/main/java",
        "$rootDir/growingio-data/encoder/src/main/java",
        "$rootDir/growingio-data/json/src/main/java",
        "$rootDir/growingio-network/okhttp3/src/main/java",
        "$rootDir/growingio-network/volley/src/main/java",
        "$rootDir/growingio-network/urlconnection/src/main/java",
        "$rootDir/growingio-tools/crash/src/main/java",
        "$rootDir/growingio-tools/snappy/src/main/java",
        "$rootDir/growingio-webservice/circler/src/main/java",
        "$rootDir/growingio-webservice/debugger/src/main/java",
]

def coverageClassDirs = [
        "$rootDir/gio-sdk/tracker/build/intermediates/javac/debug/classes",
        "$rootDir/gio-sdk/tracker-cdp/build/intermediates/javac/debug/classes",
        "$rootDir/gio-sdk/autotracker/build/intermediates/javac/debug/classes",
        "$rootDir/gio-sdk/autotracker-cdp/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-annotation/compiler/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-annotation/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-tracker-core/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-autotracker-core/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-autotracker-gradle-plugin/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-data/encoder/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-data/json/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-network/okhttp3/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-network/volley/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-network/urlconnection/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-tools/crash/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-tools/snappy/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-webservice/circler/build/intermediates/javac/debug/classes",
        "$rootDir/growingio-webservice/debugger/build/intermediates/javac/debug/classes"
]

task jacocoTestReport(type: JacocoReport, group: 'Reporting', dependsOn: 'connectedCheck') {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    sourceDirectories = files(coverageSourceDirs)

    executionData = fileTree(
            dir: "$rootDir",
            include: ["**/*.exec", "**/*.ec"]
    )

    doFirst {
        println(project.rootProject.rootDir)
        classDirectories = files(files(coverageClassDirs).collect {
            fileTree(dir: it, exclude: [
                    'android/**',
                    'androidx/**',
                    'com/example/**',
                    'com/gio/**',
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/HookClassesConfig.*',
            ])
        })
    }
}

dependencies {
    androidTestUtil libraries.test.orchestrator
    androidTestImplementation libraries.test.androidx_junit
    androidTestImplementation libraries.test.androidx_runner
    androidTestImplementation libraries.test.androidx_rules
    androidTestImplementation libraries.test.espresso_core
    androidTestImplementation libraries.test.espresso_web
    androidTestImplementation libraries.test.mockito_core
    androidTestImplementation libraries.test.truth
    androidTestImplementation libraries.test.okhttp3_mockwebserver
    androidTestImplementation libraries.test.powermock_reflect
    androidTestImplementation libraries.androidx.appcompat
    androidTestImplementation libraries.android.appcompat
    androidTestImplementation(name: 'tbs_sdk_44051', ext: 'jar')
    //androidTestImplementation libraries.others.x5_webview

    implementation libraries.android.appcompat
    implementation libraries.android.constraint
    implementation libraries.android.multidex
    implementation(name: 'tbs_sdk_44051', ext: 'jar')
    implementation(name: 'oaid_sdk_1.0.22', ext: 'aar')
    implementation project(':demo-core')
    implementation project(":demo-autotrack")

    compileOnly libraries.androidx.appcompat

}
